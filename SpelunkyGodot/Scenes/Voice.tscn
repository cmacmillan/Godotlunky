[gd_scene load_steps=43 format=2]

[ext_resource path="res://CaveTex/sBombArmed_0.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=58]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorDecompose" id=59]

[sub_resource type="VisualShaderNodeScalarOp" id=60]

[sub_resource type="VisualShaderNodeScalarOp" id=61]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=62]
default_input_values = [ 0, 3.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=63]
default_input_values = [ 0, 0.0, 1, 11.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=64]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=65]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=66]
default_input_values = [ 0, 3.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=67]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=68]

[sub_resource type="VisualShaderNodeScalarFunc" id=69]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=70]
default_input_values = [ 0, 3.0, 1, 20.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=71]

[sub_resource type="VisualShaderNodeScalarOp" id=72]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=73]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=74]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=75]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=76]
default_input_values = [ 0, 0.0, 1, 0.3 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=77]
input_name = "uv"

[sub_resource type="VisualShaderNodeIf" id=78]
default_input_values = [ 0, 0.0, 1, 0.1, 2, 1e-05, 3, Vector3( 0, 1, 0 ), 4, Vector3( 0, 0, 0 ), 5, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeScalarOp" id=87]
default_input_values = [ 0, 0.0, 1, -0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=88]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=89]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=90]
default_input_values = [ 0, 0.0, 1, 20.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=91]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=92]
default_input_values = [ 0, 3.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=93]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=94]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=95]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=96]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=79]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=97]
default_input_values = [ 0, 0.0, 1, 1.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=98]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=80]

[sub_resource type="VisualShaderNodeScalarOp" id=81]

[sub_resource type="VisualShaderNodeScalarOp" id=82]

[sub_resource type="VisualShaderNodeScalarFunc" id=83]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=84]
function = 0

[sub_resource type="VisualShader" id=85]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:29
	vec3 n_out29p0 = vec3(UV, 0.0);

// VectorDecompose:12
	float n_out12p0 = n_out29p0.x;
	float n_out12p1 = n_out29p0.y;
	float n_out12p2 = n_out29p0.z;

// ScalarOp:30
	float n_in30p1 = -0.50000;
	float n_out30p0 = n_out12p1 + n_in30p1;

// Input:10
	float n_out10p0 = TIME;

// ScalarOp:39
	float n_in39p1 = 1.00000;
	float n_out39p0 = n_out10p0 * n_in39p1;

// ScalarFunc:38
	float n_out38p0 = sin(n_out39p0);

// ScalarOp:40
	float n_in40p1 = 1.50000;
	float n_out40p0 = n_out38p0 + n_in40p1;

// ScalarOp:41
	float n_in41p1 = 0.50000;
	float n_out41p0 = n_out40p0 * n_in41p1;

// ScalarOp:14
	float n_in14p1 = 6.00000;
	float n_out14p0 = n_out10p0 * n_in14p1;

// ScalarOp:13
	float n_out13p0 = n_out14p0 + n_out12p0;

// ScalarOp:33
	float n_in33p1 = 20.00000;
	float n_out33p0 = n_out13p0 * n_in33p1;

// ScalarOp:17
	float n_in17p1 = 1.00000;
	float n_out17p0 = n_out33p0 * n_in17p1;

// ScalarFunc:2
	float n_out2p0 = sin(n_out17p0);

// ScalarOp:26
	float n_in26p1 = 1.00000;
	float n_out26p0 = n_out2p0 * n_in26p1;

// ScalarOp:16
	float n_in16p1 = 11.00000;
	float n_out16p0 = n_out33p0 * n_in16p1;

// ScalarFunc:8
	float n_out8p0 = sin(n_out16p0);

// ScalarOp:27
	float n_in27p1 = 1.00000;
	float n_out27p0 = n_out8p0 * n_in27p1;

// ScalarOp:15
	float n_in15p1 = 3.00000;
	float n_out15p0 = n_out33p0 * n_in15p1;

// ScalarFunc:9
	float n_out9p0 = sin(n_out15p0);

// ScalarOp:25
	float n_in25p1 = 1.00000;
	float n_out25p0 = n_out9p0 * n_in25p1;

// ScalarOp:19
	float n_in19p1 = 5.00000;
	float n_out19p0 = n_out33p0 * n_in19p1;

// ScalarFunc:18
	float n_out18p0 = sin(n_out19p0);

// ScalarOp:24
	float n_in24p1 = 1.00000;
	float n_out24p0 = n_out18p0 * n_in24p1;

// ScalarOp:22
	float n_in22p1 = 20.00000;
	float n_out22p0 = n_out33p0 * n_in22p1;

// ScalarFunc:21
	float n_out21p0 = sin(n_out22p0);

// ScalarOp:28
	float n_in28p1 = 0.30000;
	float n_out28p0 = n_out21p0 * n_in28p1;

// ScalarOp:35
	float n_in35p1 = 0.10000;
	float n_out35p0 = n_out33p0 * n_in35p1;

// ScalarFunc:34
	float n_out34p0 = sin(n_out35p0);

// ScalarOp:36
	float n_in36p1 = 0.10000;
	float n_out36p0 = n_out34p0 * n_in36p1;

// ScalarOp:23
	float n_out23p0 = n_out28p0 + n_out36p0;

// ScalarOp:20
	float n_out20p0 = n_out24p0 + n_out23p0;

// ScalarOp:7
	float n_out7p0 = n_out25p0 + n_out20p0;

// ScalarOp:6
	float n_out6p0 = n_out27p0 + n_out7p0;

// ScalarOp:5
	float n_out5p0 = n_out26p0 + n_out6p0;

// ScalarOp:4
	float n_in4p1 = 0.10000;
	float n_out4p0 = n_out5p0 * n_in4p1;

// ScalarOp:37
	float n_out37p0 = n_out41p0 * n_out4p0;

// ScalarOp:31
	float n_out31p0 = n_out30p0 - n_out37p0;

// ScalarFunc:32
	float n_out32p0 = abs(n_out31p0);

// If:3
	float n_in3p1 = 0.10000;
	float n_in3p2 = 0.00001;
	vec3 n_in3p3 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_in3p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in3p5 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out3p0;
	if(abs(n_out32p0 - n_in3p1) < n_in3p2)
	{
		n_out3p0 = n_in3p3;
	}
	else if(n_out32p0 < n_in3p1)
	{
		n_out3p0 = n_in3p5;
	}
	else
	{
		n_out3p0 = n_in3p4;
	}

// Output:0
	COLOR.rgb = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1159.33, 326.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 820, 120 )
nodes/fragment/2/node = SubResource( 67 )
nodes/fragment/2/position = Vector2( -560, 320 )
nodes/fragment/3/node = SubResource( 78 )
nodes/fragment/3/position = Vector2( 600, 120 )
nodes/fragment/4/node = SubResource( 79 )
nodes/fragment/4/position = Vector2( 80, 300 )
nodes/fragment/5/node = SubResource( 80 )
nodes/fragment/5/position = Vector2( -100, 300 )
nodes/fragment/6/node = SubResource( 81 )
nodes/fragment/6/position = Vector2( -100, 480 )
nodes/fragment/7/node = SubResource( 82 )
nodes/fragment/7/position = Vector2( -100, 680 )
nodes/fragment/8/node = SubResource( 83 )
nodes/fragment/8/position = Vector2( -560, 500 )
nodes/fragment/9/node = SubResource( 84 )
nodes/fragment/9/position = Vector2( -580, 720 )
nodes/fragment/10/node = SubResource( 58 )
nodes/fragment/10/position = Vector2( -1680, 440 )
nodes/fragment/12/node = SubResource( 59 )
nodes/fragment/12/position = Vector2( -1360, 140 )
nodes/fragment/13/node = SubResource( 60 )
nodes/fragment/13/position = Vector2( -1220, 500 )
nodes/fragment/14/node = SubResource( 61 )
nodes/fragment/14/position = Vector2( -1440, 440 )
nodes/fragment/15/node = SubResource( 62 )
nodes/fragment/15/position = Vector2( -780, 680 )
nodes/fragment/16/node = SubResource( 63 )
nodes/fragment/16/position = Vector2( -780, 480 )
nodes/fragment/17/node = SubResource( 64 )
nodes/fragment/17/position = Vector2( -780, 300 )
nodes/fragment/18/node = SubResource( 65 )
nodes/fragment/18/position = Vector2( -580, 900 )
nodes/fragment/19/node = SubResource( 66 )
nodes/fragment/19/position = Vector2( -780, 880 )
nodes/fragment/20/node = SubResource( 68 )
nodes/fragment/20/position = Vector2( -100, 880 )
nodes/fragment/21/node = SubResource( 69 )
nodes/fragment/21/position = Vector2( -560, 1100 )
nodes/fragment/22/node = SubResource( 70 )
nodes/fragment/22/position = Vector2( -780, 1080 )
nodes/fragment/23/node = SubResource( 71 )
nodes/fragment/23/position = Vector2( -100, 1080 )
nodes/fragment/24/node = SubResource( 72 )
nodes/fragment/24/position = Vector2( -340, 880 )
nodes/fragment/25/node = SubResource( 73 )
nodes/fragment/25/position = Vector2( -340, 680 )
nodes/fragment/26/node = SubResource( 74 )
nodes/fragment/26/position = Vector2( -340, 300 )
nodes/fragment/27/node = SubResource( 75 )
nodes/fragment/27/position = Vector2( -340, 480 )
nodes/fragment/28/node = SubResource( 76 )
nodes/fragment/28/position = Vector2( -320, 1080 )
nodes/fragment/29/node = SubResource( 77 )
nodes/fragment/29/position = Vector2( -1560, 140 )
nodes/fragment/30/node = SubResource( 87 )
nodes/fragment/30/position = Vector2( -1080, 160 )
nodes/fragment/31/node = SubResource( 88 )
nodes/fragment/31/position = Vector2( 200, 140 )
nodes/fragment/32/node = SubResource( 89 )
nodes/fragment/32/position = Vector2( 380, 160 )
nodes/fragment/33/node = SubResource( 90 )
nodes/fragment/33/position = Vector2( -1000, 540 )
nodes/fragment/34/node = SubResource( 91 )
nodes/fragment/34/position = Vector2( -597.467, 1312.93 )
nodes/fragment/35/node = SubResource( 92 )
nodes/fragment/35/position = Vector2( -800, 1280 )
nodes/fragment/36/node = SubResource( 93 )
nodes/fragment/36/position = Vector2( -360, 1320 )
nodes/fragment/37/node = SubResource( 94 )
nodes/fragment/37/position = Vector2( -80, 60 )
nodes/fragment/38/node = SubResource( 95 )
nodes/fragment/38/position = Vector2( -660, 80 )
nodes/fragment/39/node = SubResource( 96 )
nodes/fragment/39/position = Vector2( -860, 60 )
nodes/fragment/40/node = SubResource( 97 )
nodes/fragment/40/position = Vector2( -460, 40 )
nodes/fragment/41/node = SubResource( 98 )
nodes/fragment/41/position = Vector2( -260, 40 )
nodes/fragment/connections = PoolIntArray( 5, 0, 4, 0, 6, 0, 5, 1, 7, 0, 6, 1, 14, 0, 13, 0, 15, 0, 9, 0, 16, 0, 8, 0, 17, 0, 2, 0, 19, 0, 18, 0, 20, 0, 7, 1, 22, 0, 21, 0, 23, 0, 20, 1, 18, 0, 24, 0, 24, 0, 20, 0, 9, 0, 25, 0, 25, 0, 7, 0, 2, 0, 26, 0, 26, 0, 5, 0, 8, 0, 27, 0, 27, 0, 6, 0, 21, 0, 28, 0, 28, 0, 23, 0, 3, 0, 0, 0, 10, 0, 14, 0, 29, 0, 12, 0, 12, 0, 13, 1, 30, 0, 31, 0, 31, 0, 32, 0, 32, 0, 3, 0, 12, 1, 30, 0, 13, 0, 33, 0, 33, 0, 17, 0, 33, 0, 16, 0, 33, 0, 15, 0, 33, 0, 19, 0, 33, 0, 22, 0, 35, 0, 34, 0, 34, 0, 36, 0, 33, 0, 35, 0, 36, 0, 23, 1, 4, 0, 37, 1, 37, 0, 31, 1, 39, 0, 38, 0, 10, 0, 39, 0, 38, 0, 40, 0, 40, 0, 41, 0, 41, 0, 37, 0 )

[sub_resource type="ShaderMaterial" id=99]
shader = SubResource( 85 )

[node name="Node2D" type="Node2D"]

[node name="Voice" type="Sprite" parent="."]
visible = false
material = SubResource( 99 )
scale = Vector2( 100, 100 )
texture = ExtResource( 1 )
region_rect = Rect2( 0, 0, 100, 100 )
